buildscript {
	ext {
		springBootVersion = '2.0.0.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'net.de1mos.test'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 9
targetCompatibility = 9

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.liquibase:liquibase-core')
	//compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-undertow')
	//runtime('org.postgresql:postgresql')
	compile('org.postgresql:postgresql')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	//testCompile('org.springframework.security:spring-security-test')
}

configurations {
	compile.exclude module: "spring-boot-starter-tomcat"
}

tasks.withType(Test) {
	jvmArgs += ['--add-opens', 'java.base/java.lang=ALL-UNNAMED', '--add-modules', 'java.xml.bind']
}

tasks.withType(org.springframework.boot.gradle.tasks.run.BootRun) {
	jvmArgs += ['--add-opens', 'java.base/java.lang=ALL-UNNAMED', '--add-modules', 'java.xml.bind']
}